package com.day13;

/*
 *  객체(Object) - 물건, 대상
 *  책상, 컴퓨터, 모니터, 휴대폰 등의 물건
 *  친구, 선생님, 어머니, 아버지 등의 대상
 * 
 *  객체 지향 프로그래밍 - 우리 주변의 물건이나 대상의 행동을 그대로 실체화 시켜 프로그래밍 하는 것
 *  
 *  객체의 구성 요소
 *  - 상태정보(데이터, 속성) => 변수로 표현
 *  - 기능(행동) => 메서드로 표현  
 *  
 *  객체를 여러개 생성하기 위해서는 틀(클래스, Class)이 필요함
 *  
 *  객체 지향 관점에서 클래스의 정의
 *   - 클래스는 객체를 생성하기 위한 틀로서, 상태정보와 기능으로 구성되어 있다.
 *   
 *   클래스		 객체
 *  -----------------
 *  붕어빵틀		붕어빵
 *  자동차 설계도	자동차
 *  제품 설계도	제품
 *  -----------------
 *     틀		실체
 *     
 *  프로그래밍 관점에서 클래스의 정의
 *   - 관련된 변수와 메서드를 함께 정의 하는 것
 *   예) 나는 은행 계좌에서 30000원을 출금했다.
 *   객체 - 나, 은행계좌, 30000원
 *    => 은행계좌 객체의 구성 요소
 *   상태정보 - 계좌번호, 이름, 잔액 => 멤버변수로 표현
 *   기능 - 출금하다, 입금하다 => 메서드로 표현
 */

//은행계좌 객체를 생성하기 위한 틀인 은행계좌 클래스 정의

public class Account {

	//1. 멤버변수 
	String accId; // 계좌번호
	String name;  // 이름
	int balance;  // 잔액
	
	//2. 메서드 - 출금하는 기능의 메서드	
	public void withdraw(int money) {
		balance -= money;
	}
	
	//입금하는 기능의 메서드
	public void deposit(int money) {
		balance += money;
	}
	
	//편의상 추가된 메서드 - 출력기능
	public void showInfo() {
		System.out.println("계좌번호 : " + accId);
		System.out.println("이름 : " + name);
		System.out.println("잔액 : " + balance + "\n");
		
	}

}
